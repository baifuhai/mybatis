<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
		PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
		"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.test.dao.EmpMapper">

	<!--
		eviction：缓存的回收策略
			LRU – 最近最少使用的：移除最长时间不被使用的对象（默认）
			FIFO – 先进先出：按对象进入缓存的顺序来移除它们
			SOFT – 软引用：移除基于垃圾回收器状态和软引用规则的对象
			WEAK – 弱引用：更积极地移除基于垃圾收集器状态和弱引用规则的对象

		flushInterval：缓存刷新间隔
			缓存多长时间清空一次，默认不清空，设置一个毫秒值

		readOnly：是否只读
			true：
				mybatis 认为所有从缓存中获取数据的操作都是只读操作，不会修改数据。
				mybatis 为了加快获取速度，直接就会将数据在缓存中的引用交给用户。不安全，速度快
			false：(default)
				mybatis 认为获取的数据可能会被修改。
				mybatis 会利用序列化&反序列的技术克隆一份新的数据给你。安全，速度慢

		size：缓存存放多少元素

		type：指定自定义缓存的全类名，实现Cache接口即可
	-->
	<!--<cache eviction="FIFO" flushInterval="60000" readOnly="true" size="1024"/>-->
	<cache type="org.mybatis.caches.ehcache.EhcacheCache"/>

	<select id="getById" resultType="com.test.entity.Emp">
		select * from emp where id = #{id}
	</select>

	<insert id="insert" parameterType="com.test.entity.Emp" useGeneratedKeys="true" keyProperty="id">
		insert into emp
			(last_name, email, gender, dept_id)
		values
			(#{lastName}, #{email}, #{gender}, #{deptId})
	</insert>

</mapper>
